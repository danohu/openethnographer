<?php
/**
 * Implements hook_schema().
 */
function annotation_schema() {
  $schema = array();
  $schema['annotation'] = array(
    'description' => 'Stores annotations.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique item ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of annotation.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The {languages}.language of this node.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The creation datetime of the annotation.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The updated datetime of the annotation.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'text' => array(
        'description' => 'content of annotation',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'quote' => array(
        'description' => 'The text of this annotation.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uri' => array(
        'description' => 'Type uri of this annotation.',
        'type' => 'varchar',
        'length' => 2048, // Maximum URLs length.
        'not null' => TRUE,
        'sortable' => TRUE
      ),
      'ranges' => array(
        'description' => 'The ranges of the annotation.',
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
      'uid' => array(
        'description' => t('user id of annotation owner'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => t('id of the node to which the annotation applies'),
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'tid' => array(
        'description' => t('id of a taxonomy tag for this annotation'),
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
      'nid' => array('nid'),
      'tid' => array('tid'),
      'annotation_updated' => array('updated'),
      'annotation_created' => array('created'),
      'annotation_type' => array(array('type', 4)),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'tid' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('tid' => 'tid'),
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}


/**
 * Implements hook_uninstall().
 */
function annotation_uninstall() {
  variable_del('annotator_store');
}
